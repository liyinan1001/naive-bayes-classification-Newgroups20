subject re let s build softwar cryptophon for over the internet in c a t demon co uk graham toal gtoal gtoal com write in articl regq innn u gap caltech edu hal cco caltech edu hal finnei write i tri thi code yesterdai on my sparcstat elc it take over second to compress second worth of speech thi mean that it need to be optim by over a factor of befor it will be usabl in even a half duplex mode ouch thank for try it the follow program is a veri quick hack i creat a few month ago to determin whether a sun sparcstat ipc could perform real time full duplex encrypt audio with result data rate sustain by todai s modem thi test program read linearli encod audio from the audio devic compress it with gsm compress frame of bit sampl record at khz into bit result in a hz frame rate encrypt it with de then revers the process and send the reconstruct audio back to the audio devic the compress encrypt audio stream is kbit s my sparcstat ipc not exactli a veri fast machin these dai certainli slower than an elc would just bare sustain thi activ audio underrun would occcur but the speech wa veri intellig i ran it as a real time process to get the best result rememb though that thi program is a quick hack and the perform can certainli be improv the audio compress routin can be ftp d from tub cs tu berlin de i believ look for gsm or toast i us eric young s de implement but i no longer know where i got it from cheer greg cut here test program to see how much cpu it take for secur digit audio written by g onuf greg cheer bungi com written on a sun ipc run solari with a sun isdn s bu card and a speakerbox includ stdlib h includ unistd h includ fcntl h includ stdio h includ sy type h includ sy audioio h includ stropt h includ gsm h includ de h boolean t sv audio init int fd audio info t prev info audio info t info if prev info null if ioctl fd audio getinfo prev info perror audio getinfo return b fals audio initinfo info info record paus b true info plai paus b true info plai sampl rate info plai encod audio encod linear info plai channel info plai precis info record sampl rate info record encod audio encod linear info record channel info record precis info record buffer size if ioctl fd audio setinfo info perror audio setinfo return b fals if ioctl fd i flush flushrw perror i flush return b fals audio initinfo info info record paus b fals info plai paus b fals if ioctl fd audio setinfo info perror audio setinfo return b fals return b true boolean t sv in int ifd gsm handl gsm byte buf gsm signal sampl if read ifd sampl sizeof sampl sizeof sampl fprintf stderr sv in short read n return b fals gsm encod handl sampl buf return b true boolean t sv out int ofd gsm handl gsm byte buf gsm signal sampl if gsm decod handl buf sampl fprintf stderr sv out gsm decod fail n return b fals if write ofd sampl sizeof sampl sizeof sampl fprintf stderr sv out short write n return b fals return b true main gsm handl gsm frame frame int audiofd int option de cblock kei ivec in ivec out de kei schedul ks in ks out de cblock cbuf in cbuf out cbuf buf audiofd open dev audio o rdwr if audiofd perror open exit initi gsm compress code if handl gsm creat null fprintf stderr sv gsm creat fail n exit option b true if gsm option handl gsm opt fast option fprintf stderr sv gsm option fast fail n exit initi de code de random kei kei if de set kei kei ks in fprintf stderr sv de set kei fail n exit if de set kei kei ks out fprintf stderr sv de set kei fail n exit memset ivec in sizeof ivec in memset ivec out sizeof ivec out open audio devic and configur it if sv audio init audiofd null exit for get sampl bit linear hz and convert to a byte frame if sv in audiofd handl frame exit encrypt decrypt block de cbc encrypt frame cbuf out long ks in ivec in de encrypt de cbc encrypt cbuf out cbuf buf long ks out ivec out de decrypt memmov frame cbuf buf if if memcmp cbuf in cbuf buf fprintf stderr sv memcmp fail n exit endif take byte frame and convert to sampl and plai if sv out audiofd handl frame exit gsm destroi handl cut here 