subject program wm protocol in open look toolkit hi all i am studi the book unix desktop guid to open look there is an exampl winprop c that demonstr how to program wm protocol properti in chapter it can run but onli show the static text messag no notic pop up what is the problem thank in advanc for help iop file winprop c show how to set properti on a window includ x xatom h for definit of xa atom includ x intrins h includ x stringdef h includ xol openlook h includ xol statictext h includ xol oblongbutt h includ xol notic h thi file defin the atom with ol prefix id of the top level and noticeshel widget static widget top level notic shell static widget make notic static char messag client us properti to commun with the window manag thi exampl illustr how an open look applic request notif from the window manag when certain event occur the commun is in the form of a clientmessag event that the applic process in an event handler atom us for inter client commun atom atom wm protocol atom wm delet window atom wm save yourself static void handl wm messag static void save and exit static void save yourself static void pop notic static void do exit string to hold comand line for us in respond to the wm save yourself protocol messag char save cmdline void main argc argv int argc char argv widget w int i save the command line for us in respond to the wm save yourself protocol messag sprintf save cmdline s argv if argc for i i argc i strcat save cmdline argv i strcat save cmdline creat and initi the top level widget top level oliniti argv ol main null argc argv creat a statictext widget w xtvacreatemanagedwidget stext statictextwidgetclass top level xtnstring messag xtnwidth null creat a noticeshel widget for later us make notic top level intern the atom atom wm protocol xinternatom xtdisplai w wm protocol fals atom wm delet window xinternatom xtdisplai w wm delet window fals atom wm save yourself xinternatom xtdisplai w wm save yourself fals add an event handler to process clientmessag event sent by the window manag xtaddeventhandl top level noeventmask true handl wm messag null realiz the widget and start process event xtrealizewidget top level append the properti wm delet window and wm save yourself to the definit of the wm protocol properti thi step requir the window id of the top level widget the window id is valid onli after the widget is realiz xchangeproperti xtdisplai top level xtwindow top level atom wm protocol xa atom propmodeappend atom wm delet window xchangeproperti xtdisplai top level xtwindow top level atom wm protocol xa atom propmodeappend atom wm save yourself xtmainloop static void handl wm messag w client data p event widget w xtpointer client data xevent p event if p event type clientmessag p event xclient messag type atom wm protocol if p event xclient data l atom wm delet window save and exit if p event xclient data l atom wm save yourself save yourself static void save and exit displai a notic give the user a chanc to respond pop notic top level notic shell static void save yourself set the wm command properti to the save command line xchangeproperti xtdisplai top level xtwindow top level xa wm command xa string propmodereplac save cmdline strlen save cmdline static widget make notic parent widget parent widget w n text n control n exit n cancel creat a button and provid a callback to pop up a notic w xtvacreatemanagedwidget quitbutton oblongbuttonwidgetclass parent xtnlabel exit null xtaddcallback w xtnselect pop notic null creat the noticeshel widget note that you have to us xtvacreatepopupshel instead of the usual xtvacreatemanagedwidget notic shell xtvacreatepopupshel quitnotic noticeshellwidgetclass w null get the id of the text and control area widget of the noticeshel xtvagetvalu notic shell xtntextarea n text xtncontrolarea n control null place a messag in the text area of the noticeshel xtvasetvalu n text xtnstring pleas confirm exit from program null add button to the control area of the noticeshel each button ha an appropri callback n exit xtvacreatemanagedwidget noticeexit oblongbuttonwidgetclass n control xtnlabel exit null xtaddcallback n exit xtnselect do exit null n cancel xtvacreatemanagedwidget noticecancel oblongbuttonwidgetclass n control xtnlabel cancel xtndefault true null return w static void pop notic w eman w notic widget w eman w notic xtvasetvalu w notic xtnemanatewidget w eman null pop up the noticeshel widget the noticeshel widget make sure that the aplic wait until the user select from on of the button in the noticeshel s control area xtpopup w notic xtgrabexclus static void do exit w call data client data widget w xtpointer call data client data xclosedisplai xtdisplai w exit 